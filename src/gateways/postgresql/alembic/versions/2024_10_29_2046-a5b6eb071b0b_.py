"""

Revision ID: a5b6eb071b0b
Revises:
Create Date: 2024-10-29 20:46:16.735044

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a5b6eb071b0b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("telegram_id", sa.String(length=12), nullable=True),
        sa.Column("first_name", sa.String(length=128), nullable=True),
        sa.Column("last_name", sa.String(length=128), nullable=True),
        sa.Column("username", sa.String(length=128), nullable=False),
        sa.Column("language_code", sa.String(length=8), nullable=True),
        sa.Column("oid", sa.Uuid(), nullable=False, comment="Уникальный идентификатор"),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата обновления записи",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата создания записи",
        ),
        sa.PrimaryKeyConstraint("oid", name=op.f("pk_users")),
        sa.UniqueConstraint("oid", name=op.f("uq_users_oid")),
        sa.UniqueConstraint("telegram_id", name=op.f("uq_users_telegram_id")),
    )
    op.create_table(
        "friends",
        sa.Column("user_oid", sa.Uuid(), nullable=False),
        sa.Column("friend_oid", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("oid", sa.Uuid(), nullable=False, comment="Уникальный идентификатор"),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата обновления записи",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата создания записи",
        ),
        sa.ForeignKeyConstraint(
            ["friend_oid"], ["users.oid"], name=op.f("fk_friends_friend_oid_users")
        ),
        sa.ForeignKeyConstraint(
            ["user_oid"], ["users.oid"], name=op.f("fk_friends_user_oid_users")
        ),
        sa.PrimaryKeyConstraint("oid", name=op.f("pk_friends")),
        sa.UniqueConstraint("oid", name=op.f("uq_friends_oid")),
    )
    op.create_table(
        "pub_receipts",
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("creator_oid", sa.Uuid(), nullable=False),
        sa.Column("oid", sa.Uuid(), nullable=False, comment="Уникальный идентификатор"),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата обновления записи",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата создания записи",
        ),
        sa.ForeignKeyConstraint(
            ["creator_oid"],
            ["users.oid"],
            name=op.f("fk_pub_receipts_creator_oid_users"),
        ),
        sa.PrimaryKeyConstraint("oid", name=op.f("pk_pub_receipts")),
        sa.UniqueConstraint("oid", name=op.f("uq_pub_receipts_oid")),
    )
    op.create_table(
        "pub_receipt_items",
        sa.Column("position_title", sa.String(length=128), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("quantity", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("pub_receipt_oid", sa.Uuid(), nullable=False),
        sa.Column("oid", sa.Uuid(), nullable=False, comment="Уникальный идентификатор"),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата обновления записи",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата создания записи",
        ),
        sa.ForeignKeyConstraint(
            ["pub_receipt_oid"],
            ["pub_receipts.oid"],
            name=op.f("fk_pub_receipt_items_pub_receipt_oid_pub_receipts"),
        ),
        sa.PrimaryKeyConstraint("oid", name=op.f("pk_pub_receipt_items")),
        sa.UniqueConstraint("oid", name=op.f("uq_pub_receipt_items_oid")),
    )
    op.create_table(
        "pub_receipt_item_splits",
        sa.Column("user_oid", sa.Uuid(), nullable=False),
        sa.Column("share", sa.Integer(), nullable=False),
        sa.Column("pub_receipt_item_oid", sa.Uuid(), nullable=False),
        sa.Column("oid", sa.Uuid(), nullable=False, comment="Уникальный идентификатор"),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата обновления записи",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата создания записи",
        ),
        sa.ForeignKeyConstraint(
            ["pub_receipt_item_oid"],
            ["pub_receipt_items.oid"],
            name=op.f(
                "fk_pub_receipt_item_splits_pub_receipt_item_oid_pub_receipt_items"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["user_oid"],
            ["users.oid"],
            name=op.f("fk_pub_receipt_item_splits_user_oid_users"),
        ),
        sa.PrimaryKeyConstraint("oid", name=op.f("pk_pub_receipt_item_splits")),
        sa.UniqueConstraint("oid", name=op.f("uq_pub_receipt_item_splits_oid")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("pub_receipt_item_splits")
    op.drop_table("pub_receipt_items")
    op.drop_table("pub_receipts")
    op.drop_table("friends")
    op.drop_table("users")
    # ### end Alembic commands ###
